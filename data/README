Updating the bootstrap data
===========================
The request, visit and targeting data can be generated by running the DataGeneratorTest.
When the elasticsearch application starts, it will load the data in it's indices.


Before running the test
=======================
Make sure that all experiments are reset to their original values.  Before doing this,
disable the dataflow (/targeting:targeting/targeting:dataflow/running = false)
On experiment nodes, remove the following properties:
* lastUpdateTime
* mu
* sigma


Running the test
================
Run the test by executing the DataGeneratorTest. You must temporarily comment out the @Ignore statement.

The generated files are:
 * request-data.bz2
 * visit-data.bz2
 * targeting-data.bz2
to be bootstrapped when the project is cleanly started.
Executing the test takes about 75 minutes (31 days / 600x speedup).

When experimenting with configurations, this amount of time is probably too much and
it's better to tune down
* the number of WEEKS (from 4 to 1, say)
* the SESSION_TIMEOUT (from 3 to 1, say)
* the RATE_TO_COUNT (from 1200 to 600, say)


After the test
==============
When the test has run, it has generated the .bz2 files in the data/ folder.  These must
be moved to data/src/main/resources.

The experiment configuration has also been changed - these changes need to be exported too.


TIPS
====
* it's easy to stress the host system too much - so much so that it ends up GC'ing most of the time, without
  generating a suitable collection of requests.


